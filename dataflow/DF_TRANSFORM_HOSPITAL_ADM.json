{
	"name": "DF_TRANSFORM_HOSPITAL_ADM",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_hospital_admission",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionSource"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "CountrySource",
					"description": "Get 2-digit CountryCode, 3-digit CountryCode, and Population"
				},
				{
					"dataset": {
						"referenceName": "ds_dim_date_Lookup",
						"type": "DatasetReference"
					},
					"name": "DimDateSource"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "SelectReqFields"
				},
				{
					"name": "LookupCountry"
				},
				{
					"name": "SelectReqFields2"
				},
				{
					"name": "SplitDailyFromWeeklyData"
				},
				{
					"name": "AggDimDate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionSource",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CountrySource",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DimDateSource",
				"HospitalAdmissionSource select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectReqFields",
				"SelectReqFields, CountrySource lookup(SelectReqFields@country == CountrySource@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupCountry",
				"LookupCountry select(mapColumn(",
				"          country = SelectReqFields@country,",
				"          indicator,",
				"          reported_date,",
				"          reported_year_week,",
				"          value,",
				"          source,",
				"          country = CountrySource@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          continent,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectReqFields2",
				"SelectReqFields2 split(indicator=='Weekly new hospital admissions per 100k' || indicator =='Weekly new ICU admissions per 100k',",
				"     disjoint: false) ~> SplitDailyFromWeeklyData@(Weekly, Daily)",
				"DimDateSource aggregate(groupBy(ecdc_year_week = year+'-W'+lpad(week_of_year, 2, '0')),",
				"     week_start_date = min(date),",
				"          week_end_date = max(date)) ~> AggDimDate"
			]
		}
	}
}